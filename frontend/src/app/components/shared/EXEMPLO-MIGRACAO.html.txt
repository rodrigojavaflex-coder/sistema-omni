<!-- EXEMPLO: ocorrencia-form.html REFATORADO -->

<div class="form-container">
  <div class="form-header">
    <h2>{{ editMode ? 'Editar Ocorrência' : 'Nova Ocorrência' }}</h2>
  </div>

  <form [formGroup]="form" (ngSubmit)="onSubmit()" class="form-content">
    
    <!-- Informações Básicas -->
    <div class="form-section">
      <h3 class="form-section-title">Informações Básicas</h3>
      
      <div class="form-row">
        <div class="form-group">
          <label class="form-label required">Data/Hora</label>
          <input type="datetime-local" formControlName="dataHora" class="form-input"
                 [class.is-invalid]="isFieldInvalid('dataHora')">
          @if (isFieldInvalid('dataHora')) {
            <span class="form-error">{{ getFieldError('dataHora') }}</span>
          }
        </div>

        <div class="form-group">
          <label class="form-label required">Tipo de Ocorrência</label>
          <select formControlName="tipo" class="form-select"
                  [class.is-invalid]="isFieldInvalid('tipo')">
            <option value="">Selecione...</option>
            @for (tipo of tipoOptions; track tipo) {
              <option [value]="tipo">{{ tipo }}</option>
            }
          </select>
          @if (isFieldInvalid('tipo')) {
            <span class="form-error">{{ getFieldError('tipo') }}</span>
          }
        </div>
      </div>

      <div class="form-row">
        <!-- ✅ NOVO: Componente reutilizável de Veículo -->
        <div class="form-group">
          <label class="form-label required">Veículo</label>
          <app-veiculo-autocomplete
            formControlName="idVeiculo"
            [isInvalid]="isFieldInvalid('idVeiculo')"
            (veiculoSelected)="onVeiculoSelecionado($event)">
          </app-veiculo-autocomplete>
          @if (isFieldInvalid('idVeiculo')) {
            <span class="form-error">{{ getFieldError('idVeiculo') }}</span>
          }
        </div>

        <!-- ✅ NOVO: Componente reutilizável de Motorista -->
        <div class="form-group">
          <label class="form-label required">Motorista</label>
          <app-motorista-autocomplete
            formControlName="idMotorista"
            [isInvalid]="isFieldInvalid('idMotorista')"
            (motoristaSelected)="onMotoristaSelecionado($event)">
          </app-motorista-autocomplete>
          @if (isFieldInvalid('idMotorista')) {
            <span class="form-error">{{ getFieldError('idMotorista') }}</span>
          }
        </div>
      </div>

      <!-- ❌ REMOVER TODO ESTE BLOCO DE HTML DO AUTOCOMPLETE ANTIGO:
      
      <div class="form-group">
        <label class="form-label required">Veículo</label>
        <div class="autocomplete-container">
          <input 
            type="text" 
            placeholder="Buscar veículo (mín. 2 caracteres)..."
            [(ngModel)]="veiculoSearchText"
            [ngModelOptions]="{standalone: true}"
            (input)="onVeiculoSearchChange()"
            (keydown)="onVeiculoKeyDown($event)"
            (focus)="onVeiculoFocus()"
            (blur)="onVeiculoBlur()"
            class="form-input"
            [class.is-invalid]="isFieldInvalid('idVeiculo')"
            autocomplete="off"
          >
          @if (isLoadingVeiculos) {
            <div class="autocomplete-dropdown veiculo-autocomplete-dropdown">
              <div class="autocomplete-loading">Carregando...</div>
            </div>
          }
          @if (showVeiculoDropdown && filteredVeiculos.length > 0 && !isLoadingVeiculos) {
            <div class="autocomplete-dropdown veiculo-autocomplete-dropdown">
              @for (veiculo of filteredVeiculos; track veiculo.id; let i = $index) {
                <div class="autocomplete-item" 
                     [class.selected]="i === selectedVeiculoIndex"
                     (click)="selectVeiculo(veiculo)">
                  <strong>{{ veiculo.descricao }}</strong>
                  <small>{{ veiculo.placa }}</small>
                </div>
              }
            </div>
          }
          @if (showVeiculoDropdown && filteredVeiculos.length === 0 && !isLoadingVeiculos && veiculoSearchText.length >= 2) {
            <div class="autocomplete-dropdown veiculo-autocomplete-dropdown">
              <div class="autocomplete-empty">Nenhum veículo encontrado</div>
            </div>
          }
        </div>
        @if (isFieldInvalid('idVeiculo')) {
          <span class="form-error">{{ getFieldError('idVeiculo') }}</span>
        }
      </div>

      ... (mesmo bloco repetido para motorista)
      
      -->

      <div class="form-group">
        <label class="form-label required">Descrição</label>
        <textarea formControlName="descricao" class="form-textarea" rows="4"
                  [class.is-invalid]="isFieldInvalid('descricao')"></textarea>
        @if (isFieldInvalid('descricao')) {
          <span class="form-error">{{ getFieldError('descricao') }}</span>
        }
      </div>

      <!-- ... resto do formulário -->
      
    </div>

    <!-- Botões -->
    <div class="form-actions">
      <button type="button" class="btn btn-secondary" (click)="onCancel()">
        Cancelar
      </button>
      <button type="submit" class="btn btn-primary" [disabled]="loading">
        {{ loading ? 'Salvando...' : (editMode ? 'Atualizar' : 'Cadastrar') }}
      </button>
    </div>
  </form>
</div>

<!-- 
COMPARAÇÃO DE LINHAS:
=====================

ANTES:
- HTML do autocomplete de veículo: ~40 linhas
- HTML do autocomplete de motorista: ~35 linhas
- Total: ~75 linhas de HTML repetitivo

DEPOIS:
- Componente veículo: 7 linhas
- Componente motorista: 7 linhas
- Total: 14 linhas

REDUÇÃO: 61 linhas (~81% menos código HTML)
-->
